import{Pass as c}from"./Pass.js";export class MaskPass extends c{constructor(s,a){super();this.inverse=!1,this.scene=s,this.camera=a,this.clear=!0,this.needsSwap=!0}render(s,a,f,r,l){const t=s.getContext(),e=s.state;e.buffers.color.setMask(!1),e.buffers.depth.setMask(!1),e.buffers.color.setLocked(!0),e.buffers.depth.setLocked(!0);const i=this.inverse?0:1,u=this.inverse?1:0;e.buffers.stencil.setTest(!0),e.buffers.stencil.setOp(t.REPLACE,t.REPLACE,t.REPLACE),e.buffers.stencil.setFunc(t.ALWAYS,i,4294967295),e.buffers.stencil.setClear(u),e.buffers.stencil.setLocked(!0),s.setRenderTarget(f),this.clear&&s.clear(),s.render(this.scene,this.camera),s.setRenderTarget(a),this.clear&&s.clear(),s.render(this.scene,this.camera),e.buffers.color.setLocked(!1),e.buffers.depth.setLocked(!1),e.buffers.stencil.setLocked(!1),e.buffers.stencil.setFunc(t.EQUAL,1,4294967295),e.buffers.stencil.setOp(t.KEEP,t.KEEP,t.KEEP),e.buffers.stencil.setLocked(!0)}}export class ClearMaskPass extends c{constructor(){super();this.needsSwap=!1}render(s,a,f,r,l=!1){s.state.buffers.stencil.setLocked(!1),s.state.buffers.stencil.setTest(!1)}}
