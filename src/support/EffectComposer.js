import{WebGLRenderTarget as p,Clock as l,LinearFilter as f,RGBAFormat as g,Vector2 as d}from"../../web_modules/three.js";import{ShaderPass as u}from"./ShaderPass.js";import{CopyShader as w}from"./CopyShader.js";import{MaskPass as o,ClearMaskPass as R}from"./MaskPass.js";export class EffectComposer{constructor(e,i){if(this.passes=[],this.renderer=e,i===void 0){var s={minFilter:f,magFilter:f,format:g},t=e.getSize(new d());this.pixelRatio=e.getPixelRatio(),this.width=t.width,this.height=t.height,i=new p(this.width*this.pixelRatio,this.height*this.pixelRatio,s),i.texture.name="EffectComposer.rt1"}else this.pixelRatio=1,this.width=i.width,this.height=i.height;this.renderTarget1=i,this.renderTarget2=i.clone(),this.renderTarget2.texture.name="EffectComposer.rt2",this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2,this.renderToScreen=!0,this.copyPass=new u(w),this.clock=new l()}swapBuffers(){var e=this.readBuffer;this.readBuffer=this.writeBuffer,this.writeBuffer=e}addPass(e){this.passes.push(e),e.setSize(this.width*this.pixelRatio,this.height*this.pixelRatio)}insertPass(e,i){this.passes.splice(i,0,e),e.setSize(this.width*this.pixelRatio,this.height*this.pixelRatio)}isLastEnabledPass(e){for(var i=e+1;i<this.passes.length;i++)if(this.passes[i].enabled)return!1;return!0}render(e){e===void 0&&(e=this.clock.getDelta());var i=this.renderer.getRenderTarget(),s=!1,t,r,n=this.passes.length;for(r=0;r<n;r++){if(t=this.passes[r],t.enabled===!1)continue;if(t.renderToScreen=this.renderToScreen&&this.isLastEnabledPass(r),t.render(this.renderer,this.writeBuffer,this.readBuffer,e,s),t.needsSwap){if(s){var h=this.renderer.getContext(),a=this.renderer.state.buffers.stencil;a.setFunc(h.NOTEQUAL,1,4294967295),this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,e),a.setFunc(h.EQUAL,1,4294967295)}this.swapBuffers()}o!==void 0&&(t instanceof o?s=!0:t instanceof R&&(s=!1))}this.renderer.setRenderTarget(i)}reset(e){if(e===void 0){var i=this.renderer.getSize(new d());this.pixelRatio=this.renderer.getPixelRatio(),this.width=i.width,this.height=i.height,e=this.renderTarget1.clone(),e.setSize(this.width*this.pixelRatio,this.height*this.pixelRatio)}this.renderTarget1.dispose(),this.renderTarget2.dispose(),this.renderTarget1=e,this.renderTarget2=e.clone(),this.writeBuffer=this.renderTarget1,this.readBuffer=this.renderTarget2}setSize(e,i){this.width=e,this.height=i;var s=this.width*this.pixelRatio,t=this.height*this.pixelRatio;this.renderTarget1.setSize(s,t),this.renderTarget2.setSize(s,t),this.passes.forEach(r=>r.setSize(s,t))}setPixelRatio(e){this.pixelRatio=e,this.setSize(this.width,this.height)}}
